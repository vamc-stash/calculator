{"version":3,"sources":["components/Result.js","components/Button.js","components/ButtonPanel.js","logic/IsNumber.js","logic/Evaluate.js","logic/Calculate.js","App.js","serviceWorker.js","index.js"],"names":["Result","className","this","props","value","Component","Button","handleButtonClick","clickHandler","cname","orange","wide","join","trim","onClick","ButtonPanel","buttonHandler","buttonValue","pickButton","IsNumber","test","Evaluate","op1","op2","oper","console","log","parseFloat","Calculate","currState","btnValue","cache","operation","total","toString","includes","App","state","handleClick","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.62fa177b.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport '../stylings/Result.css'\n\nclass Result extends Component{\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"Result\">\n\t\t\t\t{this.props.value}\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default Result;","import React, {Component} from 'react'\nimport '../stylings/Button.css'\n\nclass Button extends Component{\n\n\thandleButtonClick = () => {\n\t\tthis.props.clickHandler(this.props.value);\n\t}\n\trender(){\n\t\tconst cname = ['button', this.props.orange ? \"Orange\":\"\", this.props.wide ? \"Wide\":\"\"]\n\n\t\treturn(\n\t\t\t<div className={cname.join(\"\").trim()}>\n\t\t\t\t <button onClick={this.handleButtonClick}>{this.props.value}</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Button;","import React, {Component} from 'react'\nimport Button from './Button';\nimport '../stylings/ButtonPanel.css'\n\nclass ButtonPanel extends Component{\n\n\tbuttonHandler = (buttonValue) => {\n\t\tthis.props.pickButton(buttonValue)\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"button-panel\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Button value=\"AC\" clickHandler={this.buttonHandler} wide/>\n\t\t\t\t\t<Button value=\"+/-\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"/\" clickHandler={this.buttonHandler} orange/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Button value=\"7\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"8\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"9\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"*\" clickHandler={this.buttonHandler} orange/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Button value=\"4\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"5\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"6\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"+\" clickHandler={this.buttonHandler} orange/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Button value=\"1\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"2\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"3\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"-\" clickHandler={this.buttonHandler} orange/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Button value=\"0\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\".\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"=\" clickHandler={this.buttonHandler}/>\n\t\t\t\t\t<Button value=\"%\" clickHandler={this.buttonHandler} orange/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ButtonPanel;\n\n","function IsNumber(buttonValue){\n\tconst digit = /[0-9]+/;\n\treturn digit.test(buttonValue)\n}\n\nexport default IsNumber;\n","function Evaluate(op1, op2, oper){\n\n\tconsole.log(op1, op2, oper)\n\tswitch(oper){\n\t\tcase '/': if(op2 === '0'){\n\t\t\t\t\treturn 'inf';\n\t\t\t\t  }\n\t\t\t\t  return parseFloat(op1) / parseFloat(op2);\n\t\tcase '*': return parseFloat(op1) * parseFloat(op2);\n\t\tcase '+': return parseFloat(op1) + parseFloat(op2);\n\t\tcase '-': return parseFloat(op1) - parseFloat(op2);\n\t\tcase '%': return parseFloat(op1) % parseFloat(op2);\n\n\t\tdefault:\n\t}\n}\n\nexport default Evaluate;","import IsNumber from './IsNumber';\nimport Evaluate from './Evaluate';\n\nfunction Calculate(currState, btnValue){\n\t\n\tif(btnValue === 'AC'){\n\t\treturn {\n\t\t\tcache: null,\n\t\t\toperation: null,\n\t\t\ttotal: null\n\t\t}\n\t}\n\n\tif(btnValue === '+/-'){\n\t\tif(currState.cache){\n\t\t\treturn {\n\t\t\t\tcache: (-1*parseFloat(currState.cache)).toString()\n\t\t\t}\n\t\t}\n\t\tif(currState.total){\n\t\t\treturn {\n\t\t\t\ttotal: (-1*parseFloat(currState.total)).toString()\n\t\t\t}\n\t\t}\n\t\treturn {}\n\t}\n\n\tif(btnValue === '.'){\n\t\tif(currState.cache && !currState.cache.includes(\".\")){\n\t\t\treturn {\n\t\t\t\tcache: currState.cache + \".\"\n\t\t\t}\n\t\t}\n\t\treturn {cache: \"0.\"}\n\t}\n\n\tif(IsNumber(btnValue)){\n\t\tif(btnValue === \"0\" && currState.cache === \"0\"){\n\t\t\treturn {}\n\t\t}\n\t\tif(currState.cache){\n\t\t\treturn {cache: currState.cache+btnValue}\n\t\t}\n\t\treturn {cache: btnValue}\n\t}\n\n\tif(btnValue === '/' || btnValue === '*' || btnValue === '+' || btnValue === '-' || btnValue === '%'){\n\n\t\tif(currState.cache && currState.operation && currState.total){\n\t\t\treturn {\n\t\t\t\tcache: null,\n\t\t\t\toperation: btnValue,\n\t\t\t\ttotal: Evaluate(currState.total, currState.cache, currState.operation).toString()\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tcache: null,\n\t\t\toperation: btnValue,\n\t\t\ttotal: currState.cache\n\t\t}\n\t}\n\n\tif(btnValue === '='){\n\n\t\tif(!currState.cache || !currState.operation || !currState.total){\n\t\t\treturn {}\n\t\t}\n\t\treturn {\n\t\t\tcache: null,\n\t\t\toperation: null,\n\t\t\ttotal: Evaluate(currState.total, currState.cache, currState.operation).toString()\n\t\t}\n\t}\n}\n\nexport default Calculate;","import React, {Component} from 'react';\nimport './App.css';\nimport Result from './components/Result';\nimport ButtonPanel from './components/ButtonPanel';\nimport Calculate from './logic/Calculate'\n\nclass App extends Component{\n\n  state = {\n    cache: null,\n    operation: null,\n    total: null\n  }\n\n  handleClick = (buttonValue) => {\n    this.setState(\n        Calculate(this.state, buttonValue)\n      )\n  }\n\n  render(){\n    console.log(this.state);\n    return(\n      <div className=\"App\">\n        <div className=\"title\">Calculator</div>\n        <div className=\"Display\">\n          <Result value = {this.state.cache || this.state.total || \"0\"}/>\n          <ButtonPanel pickButton = {this.handleClick}/>\n        </div>\n      </div>\n    ) \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}